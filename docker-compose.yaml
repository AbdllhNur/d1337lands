version: "3.6"
services:
  database:
    image: postgres:14
    volumes:
    - d1337db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_UNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
    ports:
    - "${POSTGRES_PORT}:5432"
    restart: always

  graphql-engine:
    image: hasura/graphql-engine:v2.7.0.cli-migrations-v3
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_UNAME}:${POSTGRES_PASS}@database:5432/${POSTGRES_UNAME}
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_UNAME}:${POSTGRES_PASS}@database:5432/${POSTGRES_UNAME}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_DEV_MODE: "false"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: "${GQL_SECRET}"
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      HASURA_GRAPHQL_JWT_SECRET: "{\"key\": \"${JWT_SECRET}\",\"type\": \"HS256\",\"claims_format\": \"json\"}"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "guest"
    ports:
    - "${GQL_PORT}:8080"
    depends_on:
    - "database"
    - "discordbot"
    restart: always

  webservice:
    build:
      context: ./webservice/
      dockerfile: Dockerfile
    image: webservice
    ports:
    - "${WEBSERVICE_PORT}:3000"
    depends_on:
    - "database"
    - "graphql-engine"
    - "websocket"
    - "game"
    restart: always

  discordbot:
    build:
      context: ./discordbot/
      dockerfile: Dockerfile
    image: discordbot
    ports:
    - "${DISCORDBOT_PORT}:3000"
    depends_on:
    - "database"
    restart: always

  websocket:
    build:
      context: ./websocket/
      dockerfile: Dockerfile
    image: websocket
    ports:
    - "${WEBSOCKET_PORT}:3000"
    depends_on:
    - "database"
    restart: always

  game:
    build:
      context: ./game/
      dockerfile: Dockerfile
    image: game
    ports:
    - "${GAME_PORT}:3000"
    depends_on:
    - "database"
    - "graphql-engine"
    - "websocket"
    restart: always

volumes:
  d1337db:
